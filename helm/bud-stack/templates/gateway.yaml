

apiVersion: v1
kind: ConfigMap
metadata:
  name: budproxy-config
  namespace: {{ .Values.namespace }}
data:
{{- range $key, $value := .Values.budproxy.configmap.data }}
  {{ $key }}: |-
{{ $value | indent 4 }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: budproxy
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: budproxy
  template:
    metadata:
      labels:
        app: budproxy
    spec:
      containers:
        - name: budproxy
          image: {{ .Values.budproxy.image }}
          imagePullPolicy: Always
          command: ["gateway"]
          args:
            - --config-file=/app/config/tensorzero.toml
          ports:
            - containerPort: 3000
          env:
            - name: TENSORZERO_REDIS_URL
              value: {{ .Values.budproxy.redisUrl }}
            - name: TENSORZERO_CLICKHOUSE_URL
              value: {{ .Values.budproxy.clickhouseUrl }}
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
          resources:
            {{- toYaml .Values.budproxy.resources | nindent 12 }}
      volumes:
        - name: config-volume
          configMap:
            name: budproxy-config

---
apiVersion: v1
kind: Service
metadata:
  name: budproxy-service
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: budproxy
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: v1
kind: "ConfigMap"
metadata:
  name: "bootstrap-mounted-configmap"
data:
  01_create_databases.sh: |
    #!/bin/bash
    set -e
    clickhouse client -n <<-EOSQL
      CREATE DATABASE IF NOT EXISTS bud;
    EOSQL
---
apiVersion: "clickhouse.altinity.com/v1"
kind: "ClickHouseInstallation"
metadata:
  name: "bootstrap"
spec:
  configuration:
    users:
      # printf 'test_password' | sha256sum
      test_user/password_sha256_hex: 10a6e6cc8311a3e2bcc09bf6c199adecd5dd59408c343e926b129c4914f3cb01
      # to allow access outside from kubernetes
      test_user/networks/ip:
        - 0.0.0.0/0
    clusters:
      - name: "bootstrap"
        layout:
          shardsCount: 1
          replicasCount: 1
  defaults:
    templates:
      podTemplate: pod-template
      dataVolumeClaimTemplate: data-volume-template
      logVolumeClaimTemplate: log-volume-template

  templates:
    podTemplates:
      - name: pod-template
        spec:
          containers:
            - name: clickhouse
              image: clickhouse/clickhouse-server:latest
              env:
                - name: CLICKHOUSE_ALWAYS_RUN_INITDB_SCRIPTS
                  value: "true"
              volumeMounts:
                - name: bootstrap-configmap-volume
                  mountPath: /docker-entrypoint-initdb.d
          volumes:
            - name: bootstrap-configmap-volume
              configMap:
                name: bootstrap-mounted-configmap

    volumeClaimTemplates:
      - name: data-volume-template
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
      - name: log-volume-template
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
