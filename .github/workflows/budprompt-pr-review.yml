name: "BudPrompt: PR Review"

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'services/budprompt/**'

env:
  PYTHON_VERSION: "3.11"

jobs:
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./services/budprompt

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install bandit
        run: |
          python -m pip install --upgrade pip
          pip install bandit[toml]

      - name: Run bandit security scan
        run: |
          echo "::group::Running bandit security scan"
          bandit -r budprompt/ -ll --skip B608 -f json -o bandit-report.json || true
          bandit -r budprompt/ -ll --skip B608
          echo "::endgroup::"

      - name: Upload bandit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bandit-security-report
          path: bandit-report.json

  dependency-check:
    name: Check Dependencies
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./services/budprompt

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install pip-audit
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit

      - name: Run dependency vulnerability scan
        run: |
          echo "::group::Checking for vulnerable dependencies"
          pip-audit -r requirements.txt -r requirements-test.txt -r requirements-lint.txt
          echo "::endgroup::"

  pr-status:
    name: PR Review Status
    runs-on: ubuntu-latest
    needs: [security, test, dependency-check]
    if: always()

    steps:
      - name: Check job results
        run: |
          if [[ "${{ needs.security.result }}" == "failure" ]]; then
            echo "❌ Security scan failed"
            exit 1
          fi
          if [[ "${{ needs.test.result }}" == "failure" ]]; then
            echo "❌ Tests failed"
            exit 1
          fi
          if [[ "${{ needs.dependency-check.result }}" == "failure" ]]; then
            echo "❌ Dependency check failed"
            exit 1
          fi
          echo "✅ All checks passed!"
