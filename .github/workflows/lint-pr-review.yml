name: "PR Review - Pre-commit Checks"

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  PYTHON_VERSION: "3.11"

jobs:
  pre-commit:
    name: Pre-commit Hooks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Rust (for budgateway checks)
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          components: clippy,rustfmt

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libsasl2-dev

      - name: Cache pre-commit environment
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-

      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      - name: Install additional tools
        run: |
          # Install tools that pre-commit hooks might need
          pip install bandit[toml] pip-audit mypy
          # Install Rust tools for budgateway
          cargo install cargo-deny || echo "cargo-deny already installed"

      - name: Install Node.js dependencies for frontend services
        run: |
          if [ -d "services/budadmin" ]; then
            cd services/budadmin && npm install && cd ../..
          fi
          if [ -d "services/budplayground" ]; then
            cd services/budplayground && npm install && cd ../..
          fi

      - name: Run pre-commit on changed files
        run: |
          echo "::group::Running pre-commit checks"
          pre-commit run --from-ref origin/${{ github.base_ref }} --to-ref HEAD --show-diff-on-failure
          echo "::endgroup::"

  dependency-security:
    name: Python Dependency Security Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install pip-audit
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit

      - name: Run dependency security scan
        run: |
          echo "::group::Checking Python dependencies for vulnerabilities"
          find services -name "requirements*.txt" -exec echo "Checking {}" \; -exec pip-audit --requirement {} \;
          echo "::endgroup::"

  lint-status:
    name: Code Quality Status
    runs-on: ubuntu-latest
    needs: [pre-commit, dependency-security]
    if: always()

    steps:
      - name: Check pre-commit results
        run: |
          if [[ "${{ needs.pre-commit.result }}" == "failure" ]]; then
            echo "❌ Pre-commit checks failed"
            exit 1
          fi
          if [[ "${{ needs.dependency-security.result }}" == "failure" ]]; then
            echo "❌ Dependency security check failed"
            exit 1
          fi
          echo "✅ All code quality checks passed!"
