"""cluster table added.

Revision ID: bc229dbb32c9
Revises:
Create Date: 2024-10-22 05:24:37.224308

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = "bc229dbb32c9"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade the database."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("available", "not_available", "registering", "error", name="cluster_status_enum").create(op.get_bind())
    sa.Enum("cpu", "gpu", "hpu", name="cluster_type_enum").create(op.get_bind())
    op.create_table(
        "cluster",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column(
            "type", postgresql.ENUM("cpu", "gpu", "hpu", name="cluster_type_enum", create_type=False), nullable=False
        ),
        sa.Column("configuration", sa.String(), nullable=False),
        sa.Column("host", sa.String(), nullable=False),
        sa.Column(
            "status",
            postgresql.ENUM(
                "available", "not_available", "registering", "error", name="cluster_status_enum", create_type=False
            ),
            nullable=False,
        ),
        sa.Column("total_workers", sa.Integer(), nullable=False),
        sa.Column("available_workers", sa.Integer(), nullable=False),
        sa.Column("used_workers", sa.Integer(), nullable=False),
        sa.Column("total_nodes", sa.Integer(), nullable=False),
        sa.Column("kubernetes_metadata", sa.String(), nullable=True),
        sa.Column("status_sync_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("modified_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_cluster")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade the database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("cluster")
    sa.Enum("cpu", "gpu", "hpu", name="cluster_type_enum").drop(op.get_bind())
    sa.Enum("available", "not_available", "registering", "error", name="cluster_status_enum").drop(op.get_bind())
    # ### end Alembic commands ###
