"""alter cluster and node info table.

Revision ID: c5184f25505b
Revises: 48a9a897ec17
Create Date: 2024-10-29 10:45:45.487050

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = "c5184f25505b"
down_revision: Union[str, None] = "48a9a897ec17"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade the database."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("cluster", schema=None) as batch_op:
        batch_op.drop_column("kube_nodes")
        batch_op.drop_column("kubernetes_metadata")
        batch_op.drop_column("used_workers")
        batch_op.drop_column("available_workers")
        batch_op.drop_column("status_sync_at")
        batch_op.drop_column("core_count")
        batch_op.drop_column("total_workers")
        batch_op.drop_column("type")
        batch_op.drop_column("threads_per_core")
    sa.Enum("cpu", "gpu", "hpu", name="cluster_type_enum").drop(op.get_bind())
    sa.Enum("cpu", "gpu", "hpu", name="cluster_node_type_enum").create(op.get_bind())
    with op.batch_alter_table("cluster_node_info", schema=None) as batch_op:
        batch_op.add_column(sa.Column("name", sa.String(), nullable=False))
        batch_op.add_column(
            sa.Column(
                "type",
                postgresql.ENUM("cpu", "gpu", "hpu", name="cluster_node_type_enum", create_type=False),
                nullable=False,
            )
        )
        batch_op.add_column(sa.Column("total_workers", sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column("available_workers", sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column("used_workers", sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column("threads_per_core", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("core_count", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("hardware_info", postgresql.JSONB(astext_type=sa.Text()), nullable=False))
        batch_op.add_column(sa.Column("status", sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column("status_sync_at", sa.DateTime(), nullable=False))
        batch_op.drop_column("node_info")

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade the database."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("cluster_node_info", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("node_info", postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False)
        )
        batch_op.drop_column("status_sync_at")
        batch_op.drop_column("status")
        batch_op.drop_column("hardware_info")
        batch_op.drop_column("core_count")
        batch_op.drop_column("threads_per_core")
        batch_op.drop_column("used_workers")
        batch_op.drop_column("available_workers")
        batch_op.drop_column("total_workers")
        batch_op.drop_column("type")
        batch_op.drop_column("name")
    sa.Enum("cpu", "gpu", "hpu", name="cluster_node_type_enum").drop(op.get_bind())
    sa.Enum("cpu", "gpu", "hpu", name="cluster_type_enum").create(op.get_bind())
    with op.batch_alter_table("cluster", schema=None) as batch_op:
        batch_op.add_column(sa.Column("threads_per_core", sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(
            sa.Column("type", postgresql.ENUM("cpu", "gpu", "hpu", name="cluster_type_enum"), nullable=False)
        )
        batch_op.add_column(sa.Column("total_workers", sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column("core_count", sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column("status_sync_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column("available_workers", sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column("used_workers", sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(
            sa.Column(
                "kubernetes_metadata", postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True
            )
        )
        batch_op.add_column(sa.Column("kube_nodes", sa.INTEGER(), autoincrement=False, nullable=False))

    # ### end Alembic commands ###
