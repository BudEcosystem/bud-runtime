"""Add guardrails

Revision ID: 59f0ac264062
Revises: 47f73a835ad9
Create Date: 2025-08-18 19:30:51.830967

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic_postgresql_enum import TableReference
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "59f0ac264062"
down_revision: Union[str, None] = "47f73a835ad9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("active", "inactive", "deploying", "failed", "deleted", name="guardrail_deployment_status").create(
        op.get_bind()
    )
    sa.Enum("standalone", "endpoint_mapped", name="guardrail_deployment_type").create(op.get_bind())
    sa.Enum("bud_sentinel", "azure_ai_foundry", "aws_bedrock", "custom", name="guardrail_provider_type").create(
        op.get_bind()
    )
    op.create_table(
        "guardrail_guard_types",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("display_name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "guardrail_modality_types",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("display_name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "guardrail_scanner_types",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("display_name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("supported_modalities", postgresql.ARRAY(sa.String()), nullable=False),
        sa.Column("configuration_schema", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "guardrail_providers",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("display_name", sa.String(length=255), nullable=False),
        sa.Column(
            "provider_type",
            postgresql.ENUM(
                "bud_sentinel",
                "azure_ai_foundry",
                "aws_bedrock",
                "custom",
                name="guardrail_provider_type",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("configuration_schema", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created_by", sa.Uuid(), nullable=True),
        sa.Column("user_id", sa.Uuid(), nullable=True),
        sa.Column("project_id", sa.Uuid(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["created_by"], ["user.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "guardrail_deployments",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "deployment_type",
            postgresql.ENUM("standalone", "endpoint_mapped", name="guardrail_deployment_type", create_type=False),
            nullable=False,
        ),
        sa.Column("endpoint_id", sa.Uuid(), nullable=True),
        sa.Column("deployment_endpoint_url", sa.String(), nullable=True),
        sa.Column(
            "status",
            postgresql.ENUM(
                "active",
                "inactive",
                "deploying",
                "failed",
                "deleted",
                name="guardrail_deployment_status",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("configuration", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("default_threshold", sa.Float(), nullable=True),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("project_id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["endpoint_id"], ["endpoint.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "guardrail_probes",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("tags", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("provider_id", sa.Uuid(), nullable=False),
        sa.Column("created_by", sa.Uuid(), nullable=True),
        sa.Column("user_id", sa.Uuid(), nullable=True),
        sa.Column("project_id", sa.Uuid(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["created_by"], ["user.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["provider_id"], ["guardrail_providers.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "guardrail_deployment_probes",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("deployment_id", sa.Uuid(), nullable=False),
        sa.Column("probe_id", sa.Uuid(), nullable=False),
        sa.Column("is_enabled", sa.Boolean(), nullable=False),
        sa.Column("configuration", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("threshold_override", sa.Float(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["deployment_id"], ["guardrail_deployments.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["probe_id"], ["guardrail_probes.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("deployment_id", "probe_id", name="uq_deployment_probe"),
    )
    op.create_table(
        "guardrail_rules",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("probe_id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("examples", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("configuration", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("is_enabled", sa.Boolean(), nullable=False),
        sa.Column("is_custom", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["probe_id"], ["guardrail_probes.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "guardrail_deployment_rule_configs",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("deployment_probe_id", sa.Uuid(), nullable=False),
        sa.Column("rule_id", sa.Uuid(), nullable=False),
        sa.Column("is_enabled", sa.Boolean(), nullable=False),
        sa.Column("configuration", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("threshold_override", sa.Float(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["deployment_probe_id"], ["guardrail_deployment_probes.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["rule_id"], ["guardrail_rules.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("deployment_probe_id", "rule_id", name="uq_deployment_probe_rule"),
    )
    op.create_table(
        "guardrail_rule_guard_types",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("rule_id", sa.Uuid(), nullable=False),
        sa.Column("guard_type_id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["guard_type_id"], ["guardrail_guard_types.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["rule_id"], ["guardrail_rules.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("rule_id", "guard_type_id", name="uq_rule_guard_type"),
    )
    op.create_table(
        "guardrail_rule_modalities",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("rule_id", sa.Uuid(), nullable=False),
        sa.Column("modality_type_id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["modality_type_id"], ["guardrail_modality_types.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["rule_id"], ["guardrail_rules.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("rule_id", "modality_type_id", name="uq_rule_modality"),
    )
    op.create_table(
        "guardrail_rule_scanners",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("rule_id", sa.Uuid(), nullable=False),
        sa.Column("scanner_type_id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["rule_id"], ["guardrail_rules.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["scanner_type_id"], ["guardrail_scanner_types.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("rule_id", "scanner_type_id", name="uq_rule_scanner"),
    )
    # op.drop_table('workflow_runs')
    # op.drop_table('workflow_steps')
    # op.drop_index(op.f('ix_credential_credential_type'), table_name='credential')
    # op.drop_index(op.f('ix_credential_hashed_key'), table_name='credential')
    # op.drop_index(op.f('idx_deployment_pricing_created_at'), table_name='deployment_pricing')
    # op.drop_index(op.f('idx_deployment_pricing_current_unique'), table_name='deployment_pricing', postgresql_where='(is_current = true)')
    # op.drop_index(op.f('idx_deployment_pricing_endpoint_id'), table_name='deployment_pricing')
    # op.drop_index(op.f('idx_deployment_pricing_is_current'), table_name='deployment_pricing')
    # op.drop_index(op.f('idx_endpoint_published_composite'), table_name='endpoint')
    # op.drop_index(op.f('ix_endpoint_is_published'), table_name='endpoint')
    # op.drop_index(op.f('ix_endpoint_is_published_published_date'), table_name='endpoint')
    # op.alter_column('experiments', 'project_id',
    #            existing_type=sa.UUID(),
    #            nullable=False)
    # op.drop_index(op.f('idx_model_description_search'), table_name='model', postgresql_using='gin')
    # op.drop_index(op.f('idx_model_modality_gin'), table_name='model', postgresql_using='gin')
    # op.drop_index(op.f('idx_model_name_search'), table_name='model', postgresql_using='gin')
    # op.drop_index(op.f('idx_model_status'), table_name='model')
    # op.drop_index(op.f('idx_model_use_cases_gin'), table_name='model', postgresql_using='gin')
    # op.alter_column('publication_history', 'created_at',
    #            existing_type=postgresql.TIMESTAMP(),
    #            type_=sa.DateTime(timezone=True),
    #            existing_nullable=False)
    # op.alter_column('publication_history', 'modified_at',
    #            existing_type=postgresql.TIMESTAMP(),
    #            type_=sa.DateTime(timezone=True),
    #            existing_nullable=False)
    # op.drop_index(op.f('ix_publication_history_deployment_id'), table_name='publication_history')
    # op.drop_index(op.f('ix_publication_history_performed_at'), table_name='publication_history')
    op.sync_enum_values(
        enum_schema="public",
        enum_name="workflow_type_enum",
        new_values=[
            "model_deployment",
            "model_security_scan",
            "cluster_onboarding",
            "cluster_deletion",
            "endpoint_deletion",
            "endpoint_worker_deletion",
            "cloud_model_onboarding",
            "local_model_onboarding",
            "add_worker_to_endpoint",
            "license_faq_fetch",
            "local_model_quantization",
            "model_benchmark",
            "add_adapter",
            "delete_adapter",
            "evaluation_creation",
            "guardrail_deployment",
        ],
        affected_columns=[TableReference(table_schema="public", table_name="workflow", column_name="workflow_type")],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema="public",
        enum_name="workflow_type_enum",
        new_values=[
            "model_deployment",
            "model_security_scan",
            "cluster_onboarding",
            "cluster_deletion",
            "endpoint_deletion",
            "endpoint_worker_deletion",
            "cloud_model_onboarding",
            "local_model_onboarding",
            "add_worker_to_endpoint",
            "license_faq_fetch",
            "local_model_quantization",
            "model_benchmark",
            "add_adapter",
            "delete_adapter",
            "evaluation_creation",
        ],
        affected_columns=[TableReference(table_schema="public", table_name="workflow", column_name="workflow_type")],
        enum_values_to_rename=[],
    )
    op.create_index(op.f("ix_publication_history_performed_at"), "publication_history", ["performed_at"], unique=False)
    op.create_index(
        op.f("ix_publication_history_deployment_id"), "publication_history", ["deployment_id"], unique=False
    )
    op.alter_column(
        "publication_history",
        "modified_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.alter_column(
        "publication_history",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.create_index(op.f("idx_model_use_cases_gin"), "model", ["use_cases"], unique=False, postgresql_using="gin")
    op.create_index(op.f("idx_model_status"), "model", ["status"], unique=False)
    op.create_index(
        op.f("idx_model_name_search"),
        "model",
        [sa.literal_column("to_tsvector('english'::regconfig, name::text)")],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(op.f("idx_model_modality_gin"), "model", ["modality"], unique=False, postgresql_using="gin")
    op.create_index(
        op.f("idx_model_description_search"),
        "model",
        [sa.literal_column("to_tsvector('english'::regconfig, COALESCE(description, ''::character varying)::text)")],
        unique=False,
        postgresql_using="gin",
    )
    op.alter_column("experiments", "project_id", existing_type=sa.UUID(), nullable=True)
    op.create_index(
        op.f("ix_endpoint_is_published_published_date"), "endpoint", ["is_published", "published_date"], unique=False
    )
    op.create_index(op.f("ix_endpoint_is_published"), "endpoint", ["is_published"], unique=False)
    op.create_index(
        op.f("idx_endpoint_published_composite"),
        "endpoint",
        ["is_published", "status", sa.literal_column("published_date DESC")],
        unique=False,
    )
    op.create_index(op.f("idx_deployment_pricing_is_current"), "deployment_pricing", ["is_current"], unique=False)
    op.create_index(op.f("idx_deployment_pricing_endpoint_id"), "deployment_pricing", ["endpoint_id"], unique=False)
    op.create_index(
        op.f("idx_deployment_pricing_current_unique"),
        "deployment_pricing",
        ["endpoint_id"],
        unique=True,
        postgresql_where="(is_current = true)",
    )
    op.create_index(
        op.f("idx_deployment_pricing_created_at"),
        "deployment_pricing",
        [sa.literal_column("created_at DESC")],
        unique=False,
    )
    op.create_index(op.f("ix_credential_hashed_key"), "credential", ["hashed_key"], unique=False)
    op.create_index(op.f("ix_credential_credential_type"), "credential", ["credential_type"], unique=False)
    op.create_table(
        "workflow_steps",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("workflow_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("step_id", sa.VARCHAR(length=128), autoincrement=False, nullable=False),
        sa.Column("status", sa.VARCHAR(length=20), autoincrement=False, nullable=True),
        sa.Column("notification_status", postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("num_retries", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("max_retries", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("modified_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["workflow_id"], ["workflow_runs.workflow_id"], name=op.f("workflow_steps_workflow_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("workflow_steps_pkey")),
    )
    op.create_table(
        "workflow_runs",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("workflow_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("workflow_name", sa.VARCHAR(length=128), autoincrement=False, nullable=False),
        sa.Column("status", sa.VARCHAR(length=20), autoincrement=False, nullable=True),
        sa.Column("input", postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
        sa.Column("output", postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("error", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column("notification_status", postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("num_retries", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("max_retries", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("modified_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("workflow_runs_pkey")),
        sa.UniqueConstraint(
            "workflow_id",
            name=op.f("workflow_runs_workflow_id_key"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
    )
    op.drop_table("guardrail_rule_scanners")
    op.drop_table("guardrail_rule_modalities")
    op.drop_table("guardrail_rule_guard_types")
    op.drop_table("guardrail_deployment_rule_configs")
    op.drop_table("guardrail_rules")
    op.drop_table("guardrail_deployment_probes")
    op.drop_table("guardrail_probes")
    op.drop_table("guardrail_deployments")
    op.drop_table("guardrail_providers")
    op.drop_table("guardrail_scanner_types")
    op.drop_table("guardrail_modality_types")
    op.drop_table("guardrail_guard_types")
    sa.Enum("bud_sentinel", "azure_ai_foundry", "aws_bedrock", "custom", name="guardrail_provider_type").drop(
        op.get_bind()
    )
    sa.Enum("standalone", "endpoint_mapped", name="guardrail_deployment_type").drop(op.get_bind())
    sa.Enum("active", "inactive", "deploying", "failed", "deleted", name="guardrail_deployment_status").drop(
        op.get_bind()
    )
    # ### end Alembic commands ###
