"""Add guardrails

Revision ID: 59f0ac264062
Revises: 47f73a835ad9
Create Date: 2025-08-18 19:30:51.830967

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from alembic_postgresql_enum import TableReference
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = "59f0ac264062"
down_revision: Union[str, None] = "47f73a835ad9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum(
        "running",
        "failure",
        "deploying",
        "unhealthy",
        "deleting",
        "deleted",
        "pending",
        name="guardrail_deployment_status",
    ).create(op.get_bind())
    sa.Enum("endpoint_mapped", "standalone", name="guardrail_deployment_type").create(op.get_bind())
    sa.Enum("cloud_provider", "bud_sentinel", name="guardrail_provider_type_enum").create(op.get_bind())
    op.create_table(
        "guardrail_deployments",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "deployment_type",
            postgresql.ENUM("endpoint_mapped", "standalone", name="guardrail_deployment_type", create_type=False),
            nullable=False,
        ),
        sa.Column("endpoint_id", sa.Uuid(), nullable=True),
        sa.Column(
            "status",
            postgresql.ENUM(
                "running",
                "failure",
                "deploying",
                "unhealthy",
                "deleting",
                "deleted",
                "pending",
                name="guardrail_deployment_status",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("configuration", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("default_threshold", sa.Float(), nullable=True),
        sa.Column("guardrail_types", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("project_id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["endpoint_id"], ["endpoint.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "guardrail_probes",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("sentinel_id", sa.String(length=255), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("tags", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("provider_id", sa.Uuid(), nullable=False),
        sa.Column(
            "provider_type",
            postgresql.ENUM("cloud_provider", "bud_sentinel", name="guardrail_provider_type_enum", create_type=False),
            nullable=False,
        ),
        sa.Column("is_custom", sa.Boolean(), nullable=False),
        sa.Column("created_by", sa.Uuid(), nullable=True),
        sa.Column("user_id", sa.Uuid(), nullable=True),
        sa.Column("project_id", sa.Uuid(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["created_by"], ["user.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["provider_id"], ["provider.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "guardrail_deployment_probes",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("deployment_id", sa.Uuid(), nullable=False),
        sa.Column("probe_id", sa.Uuid(), nullable=False),
        sa.Column("is_enabled", sa.Boolean(), nullable=False),
        sa.Column("configuration", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("threshold_override", sa.Float(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["deployment_id"], ["guardrail_deployments.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["probe_id"], ["guardrail_probes.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("deployment_id", "probe_id", name="uq_deployment_probe"),
    )
    op.create_table(
        "guardrail_rules",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("probe_id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("sentinel_id", sa.String(length=255), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("examples", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("guard_types", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("scanner_types", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("modality_types", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("configuration", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("is_enabled", sa.Boolean(), nullable=False),
        sa.Column("is_custom", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["probe_id"], ["guardrail_probes.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "guardrail_deployment_rule",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("deployment_probe_id", sa.Uuid(), nullable=False),
        sa.Column("rule_id", sa.Uuid(), nullable=False),
        sa.Column("is_enabled", sa.Boolean(), nullable=False),
        sa.Column("configuration", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("threshold_override", sa.Float(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["deployment_probe_id"], ["guardrail_deployment_probes.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["rule_id"], ["guardrail_rules.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("deployment_probe_id", "rule_id", name="uq_deployment_probe_rule"),
    )
    op.sync_enum_values(
        enum_schema="public",
        enum_name="workflow_type_enum",
        new_values=[
            "model_deployment",
            "model_security_scan",
            "cluster_onboarding",
            "cluster_deletion",
            "endpoint_deletion",
            "endpoint_worker_deletion",
            "cloud_model_onboarding",
            "local_model_onboarding",
            "add_worker_to_endpoint",
            "license_faq_fetch",
            "local_model_quantization",
            "model_benchmark",
            "add_adapter",
            "delete_adapter",
            "evaluation_creation",
            "guardrail_deployment",
        ],
        affected_columns=[TableReference(table_schema="public", table_name="workflow", column_name="workflow_type")],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema="public",
        enum_name="workflow_type_enum",
        new_values=[
            "model_deployment",
            "model_security_scan",
            "cluster_onboarding",
            "cluster_deletion",
            "endpoint_deletion",
            "endpoint_worker_deletion",
            "cloud_model_onboarding",
            "local_model_onboarding",
            "add_worker_to_endpoint",
            "license_faq_fetch",
            "local_model_quantization",
            "model_benchmark",
            "add_adapter",
            "delete_adapter",
            "evaluation_creation",
        ],
        affected_columns=[TableReference(table_schema="public", table_name="workflow", column_name="workflow_type")],
        enum_values_to_rename=[],
    )
    op.drop_table("guardrail_deployment_rule")
    op.drop_table("guardrail_rules")
    op.drop_table("guardrail_deployment_probes")
    op.drop_table("guardrail_probes")
    op.drop_table("guardrail_deployments")
    sa.Enum("cloud_provider", "bud_sentinel", name="guardrail_provider_type_enum").drop(op.get_bind())
    sa.Enum("endpoint_mapped", "standalone", name="guardrail_deployment_type").drop(op.get_bind())
    sa.Enum(
        "running",
        "failure",
        "deploying",
        "unhealthy",
        "deleting",
        "deleted",
        "pending",
        name="guardrail_deployment_status",
    ).drop(op.get_bind())
    # ### end Alembic commands ###
