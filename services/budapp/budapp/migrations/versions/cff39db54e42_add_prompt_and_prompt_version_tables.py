"""Add prompt and prompt_version tables

Revision ID: cff39db54e42
Revises: 47f73a835ad9
Create Date: 2025-08-18 01:31:49.571481

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cff39db54e42'
down_revision: Union[str, None] = '47f73a835ad9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create enums for prompt tables
    sa.Enum('active', 'deleted', name='prompt_version_status_enum').create(op.get_bind())
    sa.Enum('active', 'deleted', name='prompt_status_enum').create(op.get_bind())
    sa.Enum('enabled', 'disabled', 'auto', 'custom', name='rate_limit_type_enum').create(op.get_bind())
    sa.Enum('simple_prompt', name='prompt_type_enum').create(op.get_bind())
    
    # Create prompt table
    op.create_table('prompt',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('project_id', sa.Uuid(), nullable=False),
    sa.Column('endpoint_id', sa.Uuid(), nullable=False),
    sa.Column('model_id', sa.Uuid(), nullable=False),
    sa.Column('cluster_id', sa.Uuid(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('prompt_type', postgresql.ENUM('simple_prompt', name='prompt_type_enum', create_type=False), nullable=False),
    sa.Column('auto_scale', sa.Boolean(), nullable=False),
    sa.Column('caching', sa.Boolean(), nullable=False),
    sa.Column('concurrency', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.Column('rate_limit_type', postgresql.ENUM('enabled', 'disabled', 'auto', 'custom', name='rate_limit_type_enum', create_type=False), nullable=False),
    sa.Column('rate_limit_value', sa.Integer(), nullable=True),
    sa.Column('default_version_id', sa.Uuid(), nullable=True),
    sa.Column('status', postgresql.ENUM('active', 'deleted', name='prompt_status_enum', create_type=False), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('modified_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['cluster_id'], ['cluster.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['endpoint_id'], ['endpoint.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['model_id'], ['model.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create prompt_version table
    op.create_table('prompt_version',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('prompt_id', sa.Uuid(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('prompt_schema', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('status', postgresql.ENUM('active', 'deleted', name='prompt_version_status_enum', create_type=False), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('modified_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['prompt_id'], ['prompt.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('prompt_id', 'version', name='uq_prompt_version_prompt_id_version')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop prompt tables
    op.drop_table('prompt_version')
    op.drop_table('prompt')
    
    # Drop enums
    sa.Enum('simple_prompt', name='prompt_type_enum').drop(op.get_bind())
    sa.Enum('enabled', 'disabled', 'auto', 'custom', name='rate_limit_type_enum').drop(op.get_bind())
    sa.Enum('active', 'deleted', name='prompt_status_enum').drop(op.get_bind())
    sa.Enum('active', 'deleted', name='prompt_version_status_enum').drop(op.get_bind())
    # ### end Alembic commands ###
