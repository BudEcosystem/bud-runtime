"""eval tags

Revision ID: 65fad5430d50
Revises: e66057c39de4
Create Date: 2025-10-27 04:08:27.932627

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = "65fad5430d50"
down_revision: Union[str, None] = "e66057c39de4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create eval_tags table
    op.create_table(
        "eval_tags",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=20), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )

    # Create index on name for fast lookups
    op.create_index(op.f("ix_eval_tags_name"), "eval_tags", ["name"], unique=False)

    # Create unique index on LOWER(name) for case-insensitive uniqueness
    op.execute("CREATE UNIQUE INDEX ix_eval_tags_name_lower ON eval_tags (LOWER(name))")

    # Add tag_ids column to experiments table
    op.add_column("experiments", sa.Column("tag_ids", postgresql.ARRAY(sa.UUID()), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop tag_ids column from experiments
    op.drop_column("experiments", "tag_ids")

    # Drop indexes
    op.execute("DROP INDEX IF EXISTS ix_eval_tags_name_lower")
    op.drop_index(op.f("ix_eval_tags_name"), table_name="eval_tags")

    # Drop eval_tags table
    op.drop_table("eval_tags")
    # ### end Alembic commands ###
