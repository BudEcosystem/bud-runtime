"""Propmt Database Changes

Revision ID: c9794f97e17c
Revises: 53c43a46147b
Create Date: 2025-09-13 12:52:54.348037

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from alembic_postgresql_enum import TableReference
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = "c9794f97e17c"
down_revision: Union[str, None] = "53c43a46147b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("active", "deleted", name="prompt_version_status_enum").create(op.get_bind())
    sa.Enum("active", "deleted", name="prompt_status_enum").create(op.get_bind())
    sa.Enum("enabled", "disabled", "auto", "custom", name="rate_limit_type_enum").create(op.get_bind())
    sa.Enum("simple_prompt", name="prompt_type_enum").create(op.get_bind())
    op.create_table(
        "prompt",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("tags", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("project_id", sa.Uuid(), nullable=False),
        sa.Column("created_by", sa.Uuid(), nullable=False),
        sa.Column(
            "prompt_type", postgresql.ENUM("simple_prompt", name="prompt_type_enum", create_type=False), nullable=False
        ),
        sa.Column("auto_scale", sa.Boolean(), nullable=False),
        sa.Column("caching", sa.Boolean(), nullable=False),
        sa.Column("concurrency", postgresql.ARRAY(sa.Integer()), nullable=True),
        sa.Column(
            "rate_limit_type",
            postgresql.ENUM("enabled", "disabled", "auto", "custom", name="rate_limit_type_enum", create_type=False),
            nullable=False,
        ),
        sa.Column("rate_limit_value", sa.Integer(), nullable=True),
        sa.Column("default_version_id", sa.Uuid(), nullable=True),
        sa.Column(
            "status",
            postgresql.ENUM("active", "deleted", name="prompt_status_enum", create_type=False),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(["default_version_id"], ["prompt_version.id"], ondelete="SET NULL", use_alter=True),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "prompt_version",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("prompt_id", sa.Uuid(), nullable=False),
        sa.Column("endpoint_id", sa.Uuid(), nullable=False),
        sa.Column("model_id", sa.Uuid(), nullable=False),
        sa.Column("cluster_id", sa.Uuid(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("prompt_schema", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column(
            "status",
            postgresql.ENUM("active", "deleted", name="prompt_version_status_enum", create_type=False),
            nullable=False,
        ),
        sa.Column("created_by", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["cluster_id"], ["cluster.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(["endpoint_id"], ["endpoint.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["model_id"], ["model.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["prompt_id"], ["prompt.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("prompt_id", "version", name="uq_prompt_version_prompt_id_version"),
    )
    op.sync_enum_values(
        enum_schema="public",
        enum_name="workflow_type_enum",
        new_values=[
            "model_deployment",
            "model_security_scan",
            "cluster_onboarding",
            "cluster_deletion",
            "endpoint_deletion",
            "endpoint_worker_deletion",
            "cloud_model_onboarding",
            "local_model_onboarding",
            "add_worker_to_endpoint",
            "license_faq_fetch",
            "local_model_quantization",
            "model_benchmark",
            "add_adapter",
            "delete_adapter",
            "evaluation_creation",
            "evaluate_model",
            "guardrail_deployment",
            "prompt_creation",
            "prompt_schema_creation",
        ],
        affected_columns=[TableReference(table_schema="public", table_name="workflow", column_name="workflow_type")],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema="public",
        enum_name="workflow_type_enum",
        new_values=[
            "model_deployment",
            "model_security_scan",
            "cluster_onboarding",
            "cluster_deletion",
            "endpoint_deletion",
            "endpoint_worker_deletion",
            "cloud_model_onboarding",
            "local_model_onboarding",
            "add_worker_to_endpoint",
            "license_faq_fetch",
            "local_model_quantization",
            "model_benchmark",
            "add_adapter",
            "delete_adapter",
            "evaluation_creation",
            "evaluate_model",
            "guardrail_deployment",
        ],
        affected_columns=[TableReference(table_schema="public", table_name="workflow", column_name="workflow_type")],
        enum_values_to_rename=[],
    )
    op.drop_table("prompt_version")
    op.drop_table("prompt")
    sa.Enum("simple_prompt", name="prompt_type_enum").drop(op.get_bind())
    sa.Enum("enabled", "disabled", "auto", "custom", name="rate_limit_type_enum").drop(op.get_bind())
    sa.Enum("active", "deleted", name="prompt_status_enum").drop(op.get_bind())
    sa.Enum("active", "deleted", name="prompt_version_status_enum").drop(op.get_bind())
    # ### end Alembic commands ###
