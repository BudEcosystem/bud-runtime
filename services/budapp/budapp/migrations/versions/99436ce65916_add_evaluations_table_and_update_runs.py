"""add_evaluations_table_and_update_runs

Revision ID: 99436ce65916
Revises: 8f21a6b4c5d7
Create Date: 2025-09-19 02:41:38.243082

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = "99436ce65916"
down_revision: Union[str, None] = "8f21a6b4c5d7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Create evaluation_status_enum
    sa.Enum(
        "pending",
        "running",
        "completed",
        "failed",
        name="evaluation_status_enum",
    ).create(op.get_bind())

    # Create evaluations table
    op.create_table(
        "evaluations",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("experiment_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("workflow_id", sa.UUID(), nullable=True),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column(
            "status",
            postgresql.ENUM(
                "pending",
                "running",
                "completed",
                "failed",
                name="evaluation_status_enum",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["experiment_id"],
            ["experiments.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    # Add evaluation_id to runs table
    op.add_column("runs", sa.Column("evaluation_id", sa.UUID(), nullable=True))
    op.create_foreign_key(
        "fk_runs_evaluation_id",
        "runs",
        "evaluations",
        ["evaluation_id"],
        ["id"],
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Remove foreign key and column from runs
    op.drop_constraint("fk_runs_evaluation_id", "runs", type_="foreignkey")
    op.drop_column("runs", "evaluation_id")

    # Drop evaluations table
    op.drop_table("evaluations")

    # Drop enum
    sa.Enum(
        "pending",
        "running",
        "completed",
        "failed",
        name="evaluation_status_enum",
    ).drop(op.get_bind())

    # ### end Alembic commands ###
