[package]
name = "tensorzero-internal"
version.workspace = true
rust-version.workspace = true
edition = "2021"
license.workspace = true


[features]
# Forward this feature to the Rust client, so that the embedded gateway
# has the `e2e_tests` feature enabled when we run our e2e tests
e2e_tests = ["tensorzero/e2e_tests"]
pyo3 = ["dep:pyo3"]

[[test]]
name = "e2e"
path = "tests/e2e/tests.rs"
required-features = ["e2e_tests"]

[lints]
workspace = true


[dependencies]
async-stream = { workspace = true }
async-trait = "0.1.86"
aws-config = { version = "1.6", features = ["behavior-version-latest"] }
base64 = "0.22.1"
aws-sdk-bedrockruntime = { version = "1.89.0", default-features = false, features = [
    "behavior-version-latest",
    "rt-tokio",
    "default-https-client",
] }
aws-smithy-types = { version = "1.3.0", features = [
    "serde-deserialize",
    "serde-serialize",
] }
aws-types = "1.3.6"
axum = { workspace = true }
backon = { version = "1.5.0", features = ["tokio-sleep"] }
blake3 = "1.8.2"
bytes = "1.6.1"
chrono = { workspace = true }
derive_builder = "0.20.0"
futures = { workspace = true }
futures-core = "0.3.30"
hex = "0.4.3"
image = { version = "0.25.6", default-features = false }
ipnet = "2.10.1"
itertools = "0.14.0"
regex = "1.11.1"
jsonschema = "0.30.0"
jsonwebtoken = "9.3.1"
lazy_static = { workspace = true }
metrics = "0.24.2"
metrics-exporter-prometheus = { version = "0.17.0", features = [
    "http-listener",
], default-features = false }
minijinja = { version = "2.10.2", features = [
    "loader",
    "debug",
    "json",
    "loop_controls",
    "builtins",
] }
object_store = { workspace = true }
rand = { workspace = true }
rdkafka = { version = "0.36", features = ["tokio", "ssl", "sasl"] }
reqwest = { workspace = true }
reqwest-eventsource = { workspace = true }
secrecy = { workspace = true }
serde = { workspace = true }
serde-untagged = { workspace = true }
serde_json = { workspace = true }
http = { workspace = true }
serde_path_to_error = { workspace = true }
sha2 = "0.10.9"
strum = { version = "0.27.1", features = ["derive"] }
strum_macros = "0.27.1"
tokio = { workspace = true }
tokio-stream = { workspace = true }
toml = { workspace = true }
tracing.workspace = true
tracing-subscriber = { version = "0.3.18", features = [
    "env-filter",
    "fmt",
    "json",
] }
url = { workspace = true, features = ["serde"] }
uuid = { workspace = true }
tensorzero-derive = { path = "../tensorzero-derive" }
clap = { workspace = true }
aws-sdk-sagemakerruntime = { version = "1.71.0", features = [
    "behavior-version-latest",
    "rt-tokio",
    "default-https-client",
], default-features = false }
aws-smithy-runtime-api = "1.7.4"
eventsource-stream = "0.2.3"
scoped-tls = "1.0.1"
opentelemetry_sdk = "0.29.0"
opentelemetry = "0.29.1"
tracing-opentelemetry = "0.30.0"
opentelemetry-otlp = { version = "0.29.0", features = ["grpc-tonic"] }
opentelemetry-semantic-conventions = "0.29.0"
init-tracing-opentelemetry = "0.28.1"
tracing-futures = { version = "0.2.5", features = ["futures-03"] }
tracing-opentelemetry-instrumentation-sdk = { workspace = true, features = [
    "http",
] }
tower-http = { workspace = true }
tower-layer = "0.3.3"
pyo3 = { workspace = true, optional = true }
google-cloud-auth = "0.20.0"
redis = { version = "0.31.0", features = ["tokio-comp", "script"] }
rsa = { version = "0.9", features = ["sha2"] }
pem = "3.0"
pkcs8 = { version = "0.10", features = ["encryption", "pem"] }
der = "0.7"
# Rate limiting dependencies
governor = "0.6"
nonzero_ext = "0.3"
arc-swap = "1.7"
moka = { version = "0.12", features = ["future"] }
dashmap = "6.1.0"
# Analytics dependencies
maxminddb = "0.24"
uaparser = "0.6"
tonic = { version = "0.12.3", features = ["transport", "tls", "tls-roots", "gzip"] }
prost = "0.13.2"
prost-types = "0.13.2"


[dev-dependencies]
tempfile = "3.20.0"
tracing-test = { workspace = true }
paste = "1.0.15"
aws-sdk-s3 = { version = "1.87.0", default-features = false, features = [
    "behavior-version-latest",
    "sigv4a",
    "rt-tokio",
    "default-https-client",
] }
aws-credential-types = { version = "1.2.2", features = [
    "hardcoded-credentials",
] }
tensorzero = { path = "../clients/rust" }
anyhow = { workspace = true }

[build-dependencies]
built = { version = "0.8.0", features = ["git2"] }
tonic-build = { version = "0.12.3", features = ["prost"] }
