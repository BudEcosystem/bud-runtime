services:
  clickhouse:
    image: clickhouse/clickhouse-server:${TENSORZERO_CLICKHOUSE_VERSION:-24.12-alpine}
    environment:
      CLICKHOUSE_USER: chuser
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_PASSWORD: chpassword
    volumes:
      # If the directory doesn't exist locally (i.e. we haven't defined a version-specific config),
      # an empty dir will get mounted in the container
      - ./clickhouse-configs/${TENSORZERO_CLICKHOUSE_VERSION:-24.12-alpine}/users.xml:/etc/clickhouse-server/users.d/users.xml
    ports:
      - "8123:8123" # HTTP port
      - "9000:9000" # Native port
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: wget --spider --tries 1 http://chuser:chpassword@clickhouse:8123/ping
      start_period: 30s
      start_interval: 1s
      timeout: 1s

  minio:
    image: bitnami/minio:2025.4.22
    ports:
      - "8000:9000" # API port
      - "9001:9001" # Console port
    environment:
      MINIO_ROOT_USER: tensorzero-root
      MINIO_ROOT_PASSWORD: tensorzero-root
      MINIO_DEFAULT_BUCKETS: tensorzero-e2e-tests
    healthcheck:
      test: "mc ls local/tensorzero-e2e-tests || exit 1"
      start_period: 30s
      start_interval: 1s
      timeout: 1s

  jaeger:
    image: jaegertracing/jaeger:2.5.0
    volumes:
      - ./jaeger-config.yaml:/jaeger/config.yaml
    #command: --set=extensions.jaeger_storage.backends.some_store.memory.max_traces=1
    command: --config /jaeger/config.yaml
    ports:
      - "16686:16686" # Browser UI
      - "4317:4317"
      - "4318:4318"
      - "5778:5778"

  kafka:
    image: apache/kafka:3.7.0
    ports:
      - "9092:9092"
    volumes:
      - kafka-data:/var/lib/kafka/data
    environment:
      # Configure Kafka to use KRaft mode (no Zookeeper)
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
    healthcheck:
      test: ["CMD-SHELL", "/opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:9092 || exit 1"]
      start_period: 45s
      start_interval: 2s
      timeout: 10s
      retries: 20

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

volumes:
  kafka-data:
