# Issue: Triggering a workflow using topics does not do anything
# Reference: https://discord.com/channels/895029566685462578/1252528273733320724/1252528449982038070
# Set `IS_TOPIC_NOTIFICATION_ENABLED=true` in env

services:
  budnotify-api:
    image: 'ghcr.io/novuhq/novu/api:0.24.0'
    depends_on:
      - budnotify-mongodb
      - budnotify-redis
    networks:
      - bud-microframe-nw
    container_name: bud-serve-$NAMESPACE-$APP_NAME-api
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'
    env_file:
      - ../.env
    environment:
      NODE_ENV: ${NODE_ENV}
      API_ROOT_URL: ${API_ROOT_URL}
      DISABLE_USER_REGISTRATION: ${DISABLE_USER_REGISTRATION}
      PORT: ${API_PORT}
      FRONT_BASE_URL: ${FRONT_BASE_URL}
      MONGO_URL: ${MONGO_URL}
      MONGO_MIN_POOL_SIZE: ${MONGO_MIN_POOL_SIZE}
      MONGO_MAX_POOL_SIZE: ${MONGO_MAX_POOL_SIZE}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB_INDEX: 2
      REDIS_CACHE_SERVICE_HOST: ${REDIS_CACHE_SERVICE_HOST}
      REDIS_CACHE_SERVICE_PORT: ${REDIS_CACHE_SERVICE_PORT}
      S3_LOCAL_STACK: ${S3_LOCAL_STACK}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_REGION: ${S3_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      JWT_SECRET: ${JWT_SECRET}
      STORE_ENCRYPTION_KEY: ${STORE_ENCRYPTION_KEY}
      SENTRY_DSN: ${SENTRY_DSN}
      NEW_RELIC_APP_NAME: ${NEW_RELIC_APP_NAME}
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
      API_CONTEXT_PATH: ${API_CONTEXT_PATH}
      IS_MULTI_TENANCY_ENABLED: ${IS_MULTI_TENANCY_ENABLED}
      IS_TOPIC_NOTIFICATION_ENABLED: ${IS_TOPIC_NOTIFICATION_ENABLED}
    ports:
      - '3000:3000'
  budnotify-worker:
    image: 'ghcr.io/novuhq/novu/worker:0.24.0'
    depends_on:
      - budnotify-mongodb
      - budnotify-redis
    networks:
      - bud-microframe-nw
    container_name: bud-serve-$NAMESPACE-$APP_NAME-worker
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'
    env_file:
      - ../.env
    environment:
      NODE_ENV: ${NODE_ENV}
      MONGO_URL: ${MONGO_URL}
      MONGO_MAX_POOL_SIZE: ${MONGO_MAX_POOL_SIZE}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB_INDEX: 2
      REDIS_CACHE_SERVICE_HOST: ${REDIS_CACHE_SERVICE_HOST}
      REDIS_CACHE_SERVICE_PORT: ${REDIS_CACHE_SERVICE_PORT}
      S3_LOCAL_STACK: ${S3_LOCAL_STACK}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_REGION: ${S3_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      STORE_ENCRYPTION_KEY: ${STORE_ENCRYPTION_KEY}
      SENTRY_DSN: ${SENTRY_DSN}
      NEW_RELIC_APP_NAME: ${NEW_RELIC_APP_NAME}
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
      BROADCAST_QUEUE_CHUNK_SIZE: ${BROADCAST_QUEUE_CHUNK_SIZE}
      MULTICAST_QUEUE_CHUNK_SIZE: ${MULTICAST_QUEUE_CHUNK_SIZE}
      IS_MULTI_TENANCY_ENABLED: ${IS_MULTI_TENANCY_ENABLED}
      IS_TOPIC_NOTIFICATION_ENABLED: ${IS_TOPIC_NOTIFICATION_ENABLED}
  budnotify-ws:
    image: 'ghcr.io/novuhq/novu/ws:0.24.0'
    depends_on:
      - budnotify-mongodb
      - budnotify-redis
    networks:
      - bud-microframe-nw
    container_name: bud-serve-$NAMESPACE-$APP_NAME-ws
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'
    env_file:
      - ../.env
    environment:
      PORT: ${WS_PORT}
      NODE_ENV: ${NODE_ENV}
      MONGO_URL: ${MONGO_URL}
      MONGO_MAX_POOL_SIZE: ${MONGO_MAX_POOL_SIZE}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      WS_CONTEXT_PATH: ${WS_CONTEXT_PATH}
      NEW_RELIC_APP_NAME: ${NEW_RELIC_APP_NAME}
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
    ports:
      - '3002:3002'
  budnotify-web:
    image: 'ghcr.io/novuhq/novu/web:0.24.0'
    depends_on:
      - budnotify-api
      - budnotify-worker
    networks:
      - bud-microframe-nw
    container_name: bud-serve-$NAMESPACE-$APP_NAME-web
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'
    env_file:
      - ../.env
    environment:
      REACT_APP_API_URL: ${API_ROOT_URL}
      REACT_APP_ENVIRONMENT: ${NODE_ENV}
      REACT_APP_WIDGET_EMBED_PATH: ${WIDGET_EMBED_PATH}
      REACT_APP_DOCKER_HOSTED_ENV: 'true'
      REACT_APP_WS_URL: ${REACT_APP_WS_URL}
      IS_MULTI_TENANCY_ENABLED: ${IS_MULTI_TENANCY_ENABLED}
    ports:
      - 4200:4200
  budnotify-widget:
    image: 'ghcr.io/novuhq/novu/widget:0.24.0'
    depends_on:
      - budnotify-api
      - budnotify-worker
      - budnotify-web
    networks:
      - bud-microframe-nw
    container_name: bud-serve-$NAMESPACE-$APP_NAME-widget
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'
    env_file:
      - ../.env
    environment:
      REACT_APP_API_URL: ${API_ROOT_URL}
      REACT_APP_WS_URL: ${REACT_APP_WS_URL}
      REACT_APP_ENVIRONMENT: ${NODE_ENV}
      WIDGET_CONTEXT_PATH: ${WIDGET_CONTEXT_PATH}
    ports:
      - 4500:4500
  budnotify-embed:
    depends_on:
      - budnotify-widget
    networks:
      - bud-microframe-nw
    image: 'ghcr.io/novuhq/novu/embed:0.24.0'
    container_name: bud-serve-$NAMESPACE-$APP_NAME-embed
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'
    environment:
      WIDGET_URL: ${WIDGET_URL}
      NEW_RELIC_APP_NAME: ${NEW_RELIC_APP_NAME}
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
    ports:
      - 4701:4701

networks:
  bud-microframe-nw:
    name: bud-microframe-$NAMESPACE
