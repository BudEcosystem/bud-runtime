include:
  - ./docker-compose-redis.yaml
  - ./docker-compose-psql.yaml

services:
  pyguard:
    image: budserve/$APP_NAME:$NAMESPACE
    profiles:
      - app
    container_name: budserve-$NAMESPACE-$APP_NAME
    build:
      context: ..
      dockerfile: ./deploy/Dockerfile.dev
    command: [ "sh", "-c", "alembic upgrade head && uvicorn $APP_NAME.main:app --host 0.0.0.0 --port $APP_PORT --reload" ]
    volumes:
      - ../:/app/
      - ../cache:/app/cache
      - ../alembic:/app/alembic
    env_file:
      - path: ../.env
        required: true
    depends_on:
      - pyguard-redis
      - pyguard-postgres
      - pyguard-placement
    network_mode: "host"
  pyguard-sidecar:
    container_name: budserve-$NAMESPACE-$APP_NAME-dapr
    image: "daprio/daprd:edge"
    command: [ "./daprd", "--app-id", "$APP_NAME", "--app-port", "$APP_PORT", "--dapr-http-port", "$DAPR_HTTP_PORT", "--dapr-grpc-port", "$DAPR_GRPC_PORT", "--dapr-internal-grpc-port", "${DAPR_INTERNAL_GRPC_PORT:-50002}", "--placement-host-address", "$DAPR_PLACEMENT_HOST:$DAPR_PLACEMENT_PORT", "--scheduler-host-address", "${DAPR_SCHEDULER_HOST:-0.0.0.0}:${DAPR_SCHEDULER_PORT:-50006}", "--metrics-port", "$DAPR_METRICS_PORT", "--resources-path", "/components", "--config", "/config/appconfig.yaml", "--log-as-json" ]
    env_file:
      - path: ../.env
        required: true
    volumes:
      - "${DAPR_COMPONENTS:-../.dapr/components/}:/components" # Mount the components folder for the runtime to use. The mounted location must match the --resources-path argument.
      - "${DAPR_APP_CONFIG:-../.dapr/appconfig-dev.yaml}:/config/appconfig.yaml" # Mount the config file for the runtime to use. The mounted location must match the --config argument.
    network_mode: "host"
  pyguard-placement:
    container_name: budserve-$NAMESPACE-$APP_NAME-placement
    image: "daprio/placement:edge"
    command: [ "./placement", "--port", "$DAPR_PLACEMENT_PORT", "--log-as-json" ]
    ports:
      - "$DAPR_PLACEMENT_PORT:$DAPR_PLACEMENT_PORT"
    networks:
      - pyguard-network
  pyguard-scheduler:
    image: "daprio/dapr"
    command: [ "./scheduler", "--port", "$DAPR_SCHEDULER_PORT", "--log-as-json" ]
    ports:
      - "$DAPR_SCHEDULER_PORT:$DAPR_SCHEDULER_PORT"
    # WARNING - This is a tmpfs volume, your state will not be persisted across restarts
    volumes:
      - type: tmpfs
        target: /data
        tmpfs:
          size: 10GB
    privileged: true
    networks:
      - pyguard-network
networks:
  pyguard-network:
    name: budserve-$NAMESPACE-$APP_NAME
    driver: bridge
