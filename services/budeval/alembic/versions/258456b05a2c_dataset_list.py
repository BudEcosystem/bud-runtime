"""dataset list

Revision ID: 258456b05a2c
Revises: f327c0205921
Create Date: 2025-08-14 15:41:39.241568

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '258456b05a2c'
down_revision: Union[str, None] = 'f327c0205921'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exp_datasets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('meta_links', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('config_validation_schema', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('estimated_input_tokens', sa.Integer(), nullable=True),
    sa.Column('estimated_output_tokens', sa.Integer(), nullable=True),
    sa.Column('language', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('domains', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('concepts', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('humans_vs_llm_qualifications', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('task_type', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('modalities', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('sample_questions_answers', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('advantages_disadvantages', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='uq_expdataset_name')
    )
    op.create_table('exp_traits',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('icon', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('exp_dataset_versions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('dataset_id', sa.UUID(), nullable=False),
    sa.Column('version', sa.String(), nullable=False),
    sa.Column('meta', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['exp_datasets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dataset_id', 'version', name='uq_expdatasetversion_dataset_version')
    )
    op.create_table('exp_traits_dataset_pivot',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('trait_id', sa.UUID(), nullable=False),
    sa.Column('dataset_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['exp_datasets.id'], ),
    sa.ForeignKeyConstraint(['trait_id'], ['exp_traits.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('eval_sync_state', sa.Column('created_at', sa.DateTime(timezone=True), nullable=False))
    op.add_column('eval_sync_state', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False))
    op.alter_column('eval_sync_state', 'sync_timestamp',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.String(),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('eval_sync_state', 'sync_timestamp',
               existing_type=sa.String(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.drop_column('eval_sync_state', 'updated_at')
    op.drop_column('eval_sync_state', 'created_at')
    op.drop_table('exp_traits_dataset_pivot')
    op.drop_table('exp_dataset_versions')
    op.drop_table('exp_traits')
    op.drop_table('exp_datasets')
    # ### end Alembic commands ###
