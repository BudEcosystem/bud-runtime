---
- name: Extract Results from PVC (Simple Wrapper)
  hosts: localhost
  connection: local
  gather_facts: no
  collections:
    - community.kubernetes

  tasks:
    - name: Set PVC and results variables
      set_fact:
        pvc_name: "{{ pvc_name | default('eval-datasets-pvc') }}"
        results_subpath: "results/{{ job_id }}"
        target_namespace: "{{ target_namespace | default('development') }}"

    - name: Call PVC extraction tasks
      include_tasks: extract_results_from_pvc_tasks.yml
      vars:
        job_id: "{{ job_id }}"
        namespace: "{{ target_namespace }}"
        local_extract_path: "{{ local_extract_path }}"
        pvc_name: "{{ pvc_name }}"
        results_subpath: "{{ results_subpath }}"

    - name: Check if extraction was successful
      stat:
        path: "{{ local_extract_path }}/{{ job_id }}/outputs"
      register: extraction_check

    - name: Count extracted files
      find:
        paths: "{{ local_extract_path }}/{{ job_id }}/outputs"
        recurse: yes
        file_type: file
      register: extracted_files
      when: extraction_check.stat.exists

    - name: Build final extraction result
      set_fact:
        extraction_result:
          success: "{{ extraction_check.stat.exists | default(false) }}"
          job_id: "{{ job_id }}"
          extracted_path: "{{ local_extract_path }}/{{ job_id }}/outputs"
          files_count: "{{ extracted_files.files | length if extraction_check.stat.exists else 0 }}"
          total_size_bytes: "{{ extracted_files.files | map(attribute='size') | sum if extraction_check.stat.exists else 0 }}"
          timestamp_dir: "{{ hostvars[inventory_hostname].timestamp_dir | default('') }}"
          message: "{{ 'Extraction completed successfully' if extraction_check.stat.exists else 'Extraction failed - no results found' }}"

    - name: Output extraction result
      debug:
        msg: "{{ extraction_result | to_json }}"

    - name: Write JSON to file if requested
      copy:
        content: "{{ extraction_result | to_nice_json }}"
        dest: "{{ output_file }}"
      when: output_file is defined
