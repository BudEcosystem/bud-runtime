
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:alpine
        ports:
        - containerPort: 6379
        command: ["redis-server", "--requirepass", "{{ .Values.env.REDIS_PASSWORD }}"]
        volumeMounts:
        - mountPath: /data                     # Redis data directory
          name: redis-storage
      volumes:
      - name: redis-storage
        persistentVolumeClaim:
          claimName: "{{ .Values.name }}-redis-pvc"

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: "{{ .Values.name }}-redis-pv"
  namespace: {{ .Values.namespace }}
spec:
  capacity:
    storage: {{ .Values.redis.storage_size }}
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  hostPath:
    path: {{ .Values.redis.host_path }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "{{ .Values.name }}-redis-pvc"
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.redis.storage_size | quote }}  # Quote the value for safety
  storageClassName: local-path

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: {{ .Values.namespace }}
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    app: redis
  type: ClusterIP