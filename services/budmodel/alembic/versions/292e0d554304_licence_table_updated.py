"""Licence table updated

Revision ID: 292e0d554304
Revises: 69ac89bcadaf
Create Date: 2025-05-05 09:17:47.825157

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '292e0d554304'
down_revision: Union[str, None] = '69ac89bcadaf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('license_info', sa.Column('license_id', sa.Text(), nullable=False))
    op.add_column('license_info', sa.Column('is_extracted', sa.Boolean(), nullable=False))
    # Drop foreign key constraint first
    op.drop_constraint('model_info_license_id_fkey', 'model_info', type_='foreignkey')
    
    # Drop and recreate id column as UUID
    op.drop_column('license_info', 'id')
    op.add_column('license_info', sa.Column('id', sa.UUID(), primary_key=True, server_default=sa.text('gen_random_uuid()')))
    
    # Update model_info license_id to UUID
    op.execute('ALTER TABLE model_info ALTER COLUMN license_id TYPE UUID USING license_id::uuid')
    
    # Add unique constraint to id column
    op.create_unique_constraint('license_info_id_key', 'license_info', ['id'])
    
    # Recreate foreign key constraint
    op.create_foreign_key(
        'model_info_license_id_fkey',
        'model_info', 'license_info',
        ['license_id'], ['id']
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop foreign key constraint
    op.drop_constraint('model_info_license_id_fkey', 'model_info', type_='foreignkey')
    
    # Drop unique constraint
    op.drop_constraint('license_info_id_key', 'license_info', type_='unique')
    
    # Convert model_info license_id back to TEXT
    op.execute('ALTER TABLE model_info ALTER COLUMN license_id TYPE TEXT')
    
    # Drop and recreate id column as TEXT
    op.drop_column('license_info', 'id')
    op.add_column('license_info', sa.Column('id', sa.Text(), primary_key=True))
    
    # Add unique constraint to id column
    op.create_unique_constraint('license_info_id_key', 'license_info', ['id'])
    
    # Recreate foreign key constraint
    op.create_foreign_key(
        'model_info_license_id_fkey',
        'model_info', 'license_info',
        ['license_id'], ['id']
    )

    op.drop_column('license_info', 'is_extracted')
    op.drop_column('license_info', 'license_id')
    # ### end Alembic commands ###
