{{- if not (empty $.Values.clickhouseExtra.autoCreateDB) }}
apiVersion: v1
kind: Secret
metadata:
  name: "{{ .Release.Name }}-clickhouse-db-create-script"
data:
  script.sh: |-
    ch_isready() {
      while true; do
        clickhouse-client \
          --host {{ .Release.Name }}-clickhouse \
          --user {{ .Values.clickhouse.auth.username }} \
          --password {{ .Values.clickhouse.auth.password }} \
          -q ""
        exit_code="$?"

        if [[ "$exit_code" = "0" ]]; then
          break
        else
          echo "Waiting for clickhouse"
          continue
        fi
      done
    }

    ch_isready

    clickhouse-client \
      --host {{ .Release.Name }}-clickhouse\
      --user {{ .Values.clickhouse.auth.username }} \
      --password {{ .Values.clickhouse.auth.password }} <<- EOF
    {{- range $.Values.clickhouseExtra.autoCreateDB }}
      CREATE DATABASE IF NOT EXISTS {{ . }};
    {{- end }}
    EOF
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-clickhouse-db-create"
spec:
  template:
    spec:
      volumes:
        - name: "{{ .Release.Name }}-clickhouse-db-create-script"
          secret:
            secretName: "{{ .Release.Name }}-clickhouse-db-create-script"
      containers:
      - name: clickhouse-db-create
        image: "{{ .Values.clickhouse.image.repository }}:{{ .Values.clickhouse.image.tag }}"
        volumeMounts:
          - mountPath: "/var/script.sh"
            name: "{{ .Release.Name }}-clickhouse-db-create-script"
            subPath: script.sh
            readOnly: true
        command: ["/bin/bash", "/var/script.sh"]
      restartPolicy: Never
{{- end }}
