{{- if (default .Values.microservices.budapp.enabled false) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name}}-budapp
  annotations:
    {{- range $key, $value := .Values.deploymentAnnotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name}}-budapp
  template:
    metadata:
      labels:
        app: {{ .Release.Name}}-budapp
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: {{ .Values.microservices.budapp.daprid }}
        dapr.io/app-port: "9082"
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Release.Name}}-budapp
        image: {{ .Values.microservices.budapp.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command: ["sh", "-c", "alembic -c ./budapp/alembic.ini upgrade head && uvicorn budapp.main:app --host 0.0.0.0 --port 9082"]
        ports:
        - containerPort: 9082
        env:
          - name: PRIVATE_KEY_PATH
            value: "/app/keys/rsa-private-key.pem"
          - name: PRIVATE_KEY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-rsa-keys
                key: private-key-password
          - name: PUBLIC_KEY_PATH
            value: "/app/keys/rsa-public-key.pem"
          - name: BUD_CLUSTER_APP_ID
            value: {{ .Values.microservices.budcluster.daprid }}
          - name: BUD_MODEL_APP_ID
            value: {{ .Values.microservices.budmodel.daprid }}
          - name: BUD_METRICS_APP_ID
            value: {{ .Values.microservices.budmetrics.daprid }}
          - name: BUD_NOTIFY_APP_ID
            value: {{ .Values.microservices.budnotify.daprid }}
          - name: BUD_SIMULATOR_APP_ID
            value: {{ .Values.microservices.budsim.daprid }}
          - name: BUD_EVAL_APP_ID
            value: {{ .Values.microservices.budeval.daprid }}
          - name: BUD_PROMPT_APP_ID
            value: {{ .Values.microservices.budprompt.daprid }}
          - name: FRONTEND_URL
            value: {{ include "bud.ingress.url.budcustomer" . }}
          - name: ADMIN_FRONTEND_URL
            value: {{ include "bud.ingress.url.budadmin" . }}
          - name: CORS_ORIGINS
            value: "{{ join "," .Values.microservices.budapp.corsOrigins }},{{ include "bud.ingress.url.budadmin" $ }},{{ include "bud.ingress.url.budplayground" $ }},{{ include "bud.ingress.url.budcustomer" $ }}"
          - name: STATIC_DIR
            value: "/data/static-dir"
          # postgresql
          - name: PSQL_HOST
            value: {{ include "bud.externalServices.postgresql.host" . }}
          - name: PSQL_PORT
            value: {{ .Values.externalServices.postgresql.port }}
          - name: PSQL_USER
            value: {{ .Values.externalServices.postgresql.databases.budapp.username }}
          - name: PSQL_PASSWORD
            value: {{ .Values.externalServices.postgresql.databases.budapp.password }}
          - name: PSQL_DB_NAME
            value: {{ .Values.externalServices.postgresql.databases.budapp.name }}
          # minio
          - name: MINIO_ENDPOINT
            value: {{ include "bud.externalServices.minio.endpoint" . }}
          - name: MINIO_ACCESS_KEY
            value: {{ include "bud.externalServices.minio.auth.accessKey" . }}
          - name: MINIO_SECRET_KEY
            value: {{ include "bud.externalServices.minio.auth.secretKey" . }}
          - name: MINIO_BUCKET
            value: {{ .Values.externalServices.minio.buckets.modelRegistry }}
          - name: MINIO_MODEL_BUCKET
            value: {{ .Values.externalServices.minio.buckets.modelInfo }}
          - name: MINIO_SECURE
            value: "false"
        {{- $root := . }}
        {{- range $key, $value := .Values.microservices.budapp.env }}
          - name: {{ $key }}
            value: {{ tpl $value $root | quote }}
        {{- end }}
        envFrom:
          - configMapRef:
              name: {{ .Release.Name}}-bud-global
        resources:
          limits:
            memory: 512Mi
            cpu: 2
          requests:
            memory: 256Mi
            cpu: 250m
        volumeMounts:
        - name: add-dir-budmo
          mountPath: /datadisk/add_model_dir
        - name: static-dir
          mountPath: /data/static-dir
        - name: rsa-keys
          mountPath: /app/keys
          readOnly: true
      volumes:
      - name: add-dir-budmo
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-bud-add-dir-budmo
      - name: static-dir
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-bud-static-dir
      - name: rsa-keys
        secret:
          secretName: {{ .Release.Name }}-rsa-keys
          defaultMode: 0444
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-budapp
spec:
  ports:
  - port: 9082
    targetPort: 9082
  selector:
    app: {{ .Release.Name }}-budapp
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-bud-static-dir
spec:
{{ if .Values.storage.budappStaticDir.className }}
  storageClassName: {{ .Values.storage.budappStaticDir.className }}
{{ end }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.storage.budappStaticDir.size }}
---
apiVersion: dapr.io/v2alpha1
kind: Subscription
metadata:
  name: {{ .Release.Name }}-budapp-pubsub-subscription
spec:
  topic: budAppMessages
  routes:
    rules:
      - match: event.type == "credential_update"
        path: /credentials/update
    default: /notifications
  pubsubname: {{ .Release.Name }}-pubsub
  deadLetterTopic: poisonMessages
scopes:
  - budapp
{{ end }}
