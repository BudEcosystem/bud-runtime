{{- if (default .Values.microservices.budmodel.enabled false) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-budmodel
  annotations:
    {{- range $key, $value := .Values.deploymentAnnotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-budmodel
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-budmodel
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: {{ .Values.microservices.budmodel.daprid }}
        dapr.io/app-port: "3004"
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Release.Name }}-budmodel
        image: {{ .Values.microservices.budmodel.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command: ["sh", "-c", "apt install clamav clamav-daemon -y && freshclam && sed -i 's|^LocalSocket .*|LocalSocket /tmp/clamd.ctl|' /etc/clamav/clamd.conf && nohup clamd -c /etc/clamav/clamd.conf && nohup aria2c --enable-rpc --rpc-listen-all --rpc-listen-port 6800 --dir /data/models-registry --max-concurrent-downloads 5 > aria2.log 2>&1 & sleep 2 && alembic -c ./alembic.ini upgrade head && uvicorn budmodel.main:app --host 0.0.0.0 --port 3004"]
        ports:
        - containerPort: 3004
        env:
          # postgresql
          - name: PSQL_HOST
            value: {{ include "bud.externalServices.postgresql.host" . }}
          - name: PSQL_PORT
            value: {{ .Values.externalServices.postgresql.port }}
          - name: PSQL_USER
            value: {{ .Values.externalServices.postgresql.databases.budmodel.username }}
          - name: PSQL_PASSWORD
            value: {{ .Values.externalServices.postgresql.databases.budmodel.password }}
          - name: PSQL_DB_NAME
            value: {{ .Values.externalServices.postgresql.databases.budmodel.name }}
          # minio
          - name: MINIO_ENDPOINT
            value: {{ include "bud.externalServices.minio.endpoint" . }}
          - name: MINIO_ACCESS_KEY
            value: {{ include "bud.externalServices.minio.auth.accessKey" . }}
          - name: MINIO_SECRET_KEY
            value: {{ include "bud.externalServices.minio.auth.secretKey" . }}
          - name: MINIO_BUCKET
            value: {{ .Values.externalServices.minio.buckets.modelRegistry }}
          - name: MINIO_MODEL_BUCKET
            value: {{ .Values.externalServices.minio.buckets.modelInfo }}
          - name: MINIO_SECURE
            value: "false"
        {{ $root := . }}
        {{- range $key, $value := .Values.microservices.budmodel.env }}
          - name: {{ $key }}
            value: {{ tpl $value $root | quote }}
        {{- end }}
        envFrom:
          - configMapRef:
              name: {{ .Release.Name}}-bud-global
        resources:
          limits:
            memory: 8192Mi
            cpu: 1
          requests:
            memory: 1024Mi
            cpu: 250m
        volumeMounts:
        - name: models-registry
          mountPath: /data/models-registry
        - name: add-dir-budmo
          mountPath: /datadisk/add_model_dir
      volumes:
      - name: models-registry
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-bud-models-registry
      - name: add-dir-budmo
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-bud-add-dir-budmo
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-budmodel
spec:
  ports:
  - port: 3004
    targetPort: 3004
  selector:
    app: {{ .Release.Name }}-budmodel
  type: ClusterIP
---
apiVersion: dapr.io/v2alpha1
kind: Subscription
metadata:
  name: {{ .Release.Name }}-budmodel-pubsub-subscription
spec:
  topic: budModelMessages
  routes:
    default: /notifications
  pubsubname: {{ .Release.Name }}-pubsub
  deadLetterTopic: poisonMessages
scopes:
  - budmodel
{{ end }}
