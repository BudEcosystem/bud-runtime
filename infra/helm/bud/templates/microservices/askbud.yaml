{{- if (default .Values.microservices.askbud.enabled false) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-askbud
  annotations:
    {{- range $key, $value := .Values.deploymentAnnotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}

spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-askbud
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-askbud
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: {{ .Values.microservices.askbud.daprid }}
        dapr.io/app-port: "3000"
        dapr.io/volume-mounts: "crypto-keys:/mnt/crypto-keys"
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- $nodeSelector := include "bud.nodeSelector" (dict "service" .Values.microservices.askbud "global" .Values.global "context" $) }}
      {{- if $nodeSelector }}
      nodeSelector:
        {{- $nodeSelector | nindent 8 }}
      {{- end }}
      {{- $affinity := include "bud.affinity" (dict "service" .Values.microservices.askbud "global" .Values.global "context" $) }}
      {{- if $affinity }}
      affinity:
        {{- $affinity | nindent 8 }}
      {{- end }}
      containers:
      - name: askbud
        image: {{ .Values.microservices.askbud.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command: ["sh", "-c", "uvicorn askbud.main:app --host 0.0.0.0 --port 3000"]
        ports:
        - containerPort: 3000
        env:
          - name: INFERENCE_MODEL
            value: {{ .Values.microservices.askbud.model }}
          - name: BUD_CLUSTER_APP_ID
            value: {{ .Values.microservices.budcluster.daprid }}
          - name: BUD_APP_ID
            value: {{ .Values.microservices.budapp.daprid }}
          - name: PSQL_HOST
            value: {{ include "bud.externalServices.postgresql.host" . }}
          - name: PSQL_PORT
            value: {{ .Values.externalServices.postgresql.port | quote }}
          - name: PSQL_USER
            value: {{ .Values.externalServices.postgresql.databases.budask.username }}
          - name: PSQL_PASSWORD
            value: {{ .Values.externalServices.postgresql.databases.budask.password }}
          - name: PSQL_DB_NAME
            value: {{ .Values.externalServices.postgresql.databases.budask.name }}
        {{ $root := . }}
        {{- range $key, $value := .Values.microservices.askbud.env }}
          - name: {{ $key }}
            value: {{ tpl $value $root | quote }}
        {{- end }}
        envFrom:
          - configMapRef:
              name: {{ .Release.Name}}-bud-global
        resources:
          limits:
            memory: 512Mi
            cpu: 1
          requests:
            memory: 256Mi
            cpu: 250m
        volumeMounts:
        - name: crypto-keys
          mountPath: /root/.cache/budserve/keys
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: crypto-keys
        secret:
          secretName: {{ .Release.Name }}-dapr-crypto
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-askbud
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    app: {{ .Release.Name }}-askbud
  type: ClusterIP
---
apiVersion: dapr.io/v2alpha1
kind: Subscription
metadata:
  name: {{ .Release.Name }}-askbud-pubsub-subscription
spec:
  topic: askbud
  routes:
    default: /notifications
  pubsubname: {{ .Release.Name }}-pubsub
  deadLetterTopic: poisonMessages
scopes:
  - askbud
{{ end }}
